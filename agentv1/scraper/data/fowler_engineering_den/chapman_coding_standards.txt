Chapman University Computer Science Coding and Documentation Standards for CPSC and SE Courses Rev. 1.0 Documentation It is expected that all source files submitted for CPSC and SE courses adhere to the following set of documentation standards, at a minimum:
1) All source files will start with a header comment containing the following items (one per line):
a. Full name b. Student ID c. Chapman email d. Course number and section e. Assignment or exercise number 2) Below (1), a brief overview of the purpose/function of the source file being submitted.
This includes any high-level design decisions, or any subtle implementation choices worth documenting 3) All classes/methods/functions/member variables/etc will be documented individually with block comments providing the following:
a. Name of the function b. A description of the value returned and its type, if applicable c. A description of each parameter and its type, if applicable d. A description of any exceptions thrown, if applicable 4) Inline comments should be used sparingly to clarify any code that is difficult to understand due to performance optimization, etc.
While it is not required for these comments to be compatible with document generation systems (Javadoc, doc strings, cppdoc, doxygen, etc), students are encouraged to leverage these technologies as applicable.
Naming Conventions In addition to the above documentation standards, all code should adhere to standard best practices for naming conventions. While there are many sources of documentation for these standards, a concise overview is available from Google here:
https://google.github.io/styleguide/javaguide.html - s5-naming Software Version Description (SVD) All source code will be accompanied with a plain text README file. We encourage students to take advantage of markdown technology if they are inclined to do so. This file will contain:
1) The following identifying information:
 a. Full name b. Student ID c. Chapman email d. Course number and section e. Assignment or exercise number 2) A list of all source files submitted for the assignment 3) A description of any known compile or runtime errors, code limitations, or deviations from the assignment specification (if applicable) 4) A list of all references used to complete the assignment, including peers (if applicable) 5) Instructions for running the assignment. (Typically applicable in advanced courses using build systems or third party libraries) Rev 1.0: Linstead (August 2017)