Given the multi-cycle processor design below, implement the bne (branch if not equal) instruction, with an opcode of 000101. The instruction format is the same as the beq instruction, but the branch is taken if the operands are not equal. Update the controller truth table appropriately and show any changes to the datapath if necessary. Explain your design.
S0: Fetch S1: Decode IorD = 0 Reset AluSrcA = 0 ALUSrcB = 01 ALUSrcA = 0 ALUOp = 00 ALUSrcB = 11 PCSrc = 0 ALUOp = 00 IRWrite PCWrite Op = BEQ Op = LW Op = R-type or S2: MemAdr Op = SW S6: Execute S8: Branch ALUSrcA = 1 ALUSrcA = 1 ALUSrcA = 1 ALUSrcB = 00 ALUSrcB = 10 ALUSrcB = 00 ALUOp = 01 ALUOp = 00 ALUOp = 10 PCSrc = 1 Branch Op = SW Op = LW S7: ALU S5: MemWrite Writeback S3: MemRead RegDst = 1 IorD = 1 IorD = 1 MemtoReg = 0 MemWrite RegWrite S4: Mem Writeback RegDst = 0 MemtoReg = 1 RegWrite
 31:265:0 CLK CLK 0 SrcA WE3 PC' PC Instr 25:21 A1 RD1100 RD A 20:16 A2 RD2 ALUResult ALUOut 11 Instr / Data SrcB 20:160 Memory A315:111 Register File WD3 <<2 SignImm 15:0 Sign Extend RegDst Branch MemWrite MemtoReg CLK PCWrite PCEn IorD Control PCSrc Unit ALUControl 2:0 IRWrite ALUSrcB 1:0 ALUSrcA Op RegWrite Funct CLK CLK CLK WE A Zero CLK Adr B U EN EN 00 L A 401 CLK WD 11 Data 1